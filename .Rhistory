shiny::runApp('Documents/b-statistics/APP')
runApp('Documents/b-statistics/APP')
runApp('Documents/b-statistics/APP')
runApp('Documents/b-statistics/APP')
runApp('Documents/b-statistics/APP')
runApp('Documents/b-statistics/APP')
runApp('Documents/b-statistics/APP')
runApp('Documents/b-statistics/APP')
runApp('Documents/b-statistics/APP')
pchisq(q=100, df=80, ncp = 0, lower.tail = FALSE, log.p = FALSE)
pi
area =  function(r){
return(pi*r^2)
}
area(20)
?rnorm()
radi<-rnorm(n = 10000, mean = 20,sd=2)
radi
areas<-sapply(radi,area)
mean(area)
area
area(20)
area =  function(r){
return(pi*r^2)
}
area(20)
areas<-sapply(radi,area)
mean(area)
areas<-sapply(radi,area)
areas
areas<-sapply(radi,area)
mean(area)
mean(1)
mean(as.numeric(area))
area
mean(areas)
area(20)
var(areas)
?var
areas
sd(areas)
area(20)
mean(areas)
areas<-sapply(radi,area)
areas
mean(areas)
area(20)
sqrt(sd(areas))
area(20)
mean(areas)-sqrt(sd(areas))
area(20)
radi
hist(radi)
mean(areas)
mean(areas)-4
area(20)
sqrt(sd(areas))
mean(areas)-sqrt(sd(areas))
#Actual Area
area(20)
radi<-rnorm(n = 10000, mean = 20,sd=2)
radi
var(radi)
radi<-rnorm(n = 10000, mean = 20,sd=2)
areas<-sapply(radi,area)
mean(areas)-16
#Actual Area
area(20)
mean(areas)-16
#Actual Area
area(20)
area =  function(r){
return(pi*r^2)
}
radi<-rnorm(n = 10000, mean = 20,sd=2)
area(20)
radi<-rnorm(n = 10000, mean = 20,sd=2)
areas<-sapply(radi,area)
mean(areas)
area(20)
mean(areas)-area(20)
mean(areas)-area(20)
radi<-rnorm(n = 10000, mean = 20,sd=2)
areas<-sapply(radi,area)
mean(areas)
#Actual Area
area(20)
mean(areas)-area(20)
radi<-rnorm(n = 10000, mean = 20,sd=2)
areas<-sapply(radi,area)
mean(areas)
#Actual Area
area(20)
mean(areas)-area(20)
radi<-rnorm(n = 10000, mean = 20,sd=2)
areas<-sapply(radi,area)
mean(areas)
#Actual Area
area(20)
mean(areas)-area(20)
radi<-rnorm(n = 10000, mean = 20,sd=2)
areas<-sapply(radi,area)
mean(areas)
#Actual Area
area(20)
mean(areas)-area(20)
radi<-rnorm(n = 1000000, mean = 20,sd=2)
areas<-sapply(radi,area)
mean(areas)
#Actual Area
area(20)
mean(areas)-area(20)
radi<-rnorm(n = 1000000, mean = 20,sd=2)
areas<-sapply(radi,area)
mean(areas)
#Actual Area
area(20)
mean(areas)-area(20)
radi<-rnorm(n = 10000, mean = 20,sd=2)
radi<-rnorm(n = 100000, mean = 20,sd=2)
areas<-sapply(radi,area)
area(20)
mean(areas)-pi*area(20)
mean(areas)-pi*4
area(20)
mean(areas)-pi*4
#1256.363
?par
par(mfrow = c(2,2))
?rgamma
?rchisq
?rf
hist(rnorm(10000,0,1))
hist(rgamma(10000,0,1))
rchisq(rnorm(10000,1))
hist(rf(10000,1,2
hist(rgamma(10000,1,1))
rchisq(rnorm(10000,1))
hist(rf(10000,1,2
hist(rnorm(10000,0,1))
hist(rf(10000,1,2 ))
hist(rf(10000,4,2 ))
hist(rf(100,5,2 ))
qf(100,5,2 )
hist(rf(100,5,2 ))
hist(rf(100,5,5 ))
rchisq(rnorm(10000,1))
rchisq(rchisq(10000,1))
hist(rchisq(10000,1))
hist(rgamma(10000,1,1))
hist(rnorm(10000,0,1))
par(mfrow = c(2,2))
hist(rnorm(10000,0,1))
hist(rgamma(10000,1,1))
hist(rchisq(10000,1))
hist(rf(100,5,5 ))
par(mfrow = c(2,2))
hist(rnorm(10000,0,1))
hist(rgamma(10000,1,1))
hist(rchisq(10000,1))
hist(rf(100,5,5 ))
pchisq(q=100, df=80, ncp = 0, lower.tail = FALSE, log.p = FALSE)
library(kerasR)
install.packages("kerasR")
mod <- Sequential()
setwd("~/Documents/MAS/418/Hw4")
library(kerasR)
mod <- Sequential()
reticulate::use_python()
devtools::install_github("rstudio/keras")
install_tensorflow()
library(kerasR)
install_tensorflow()
library(keras)
library(keras)
install_tensorflow()
library(keras)
